{"ast":null,"code":"import axios from \"axios\";\nimport toastr from 'toastr';\nconst API_URL = \"http://localhost:8080/keep/\";\nexport const isEmptyOrNull = value => {\n  if (value === \"\" || value === null || value === undefined || value === \"undefined\") {\n    return true;\n  }\n\n  return false;\n};\nexport const request = async (url, method, data) => {\n  let headers = {\n    accept: \"application/json\",\n    \"content-type\": \"multipart/form-data\"\n  };\n  let result = null;\n  const api = axios.create({\n    baseURL: API_URL,\n    header: headers,\n    responseType: \"json\"\n  });\n\n  if (result != null) {\n    return result;\n  } // if (token) {\n  //   header = {\n  //     Authorization: `Bearer ${token}`,\n  //     \"Content-Type\": \"application/json; multipart/form-data\",\n  //   };\n  // }\n\n\n  if (method.toLowerCase() === \"get\") {\n    return await api.get(url).catch(err => {\n      result = err.response;\n      console.log(err.message, err.response);\n      console.log(err, err.response);\n    });\n  }\n\n  if (method.toLowerCase() === \"post\") {\n    console.log(\"post\");\n    return await api.post(url, data).catch(err => {\n      result = err.response;\n      console.log(err.message, err.response);\n      console.log(err, err.response);\n    }); // .catch((err) => {\n    //   result = err.response;\n    //   // console.log(err.message, err.response);\n    //   // if (err.message.includes(\"401\")) {\n    //   //   const {\n    //   //     data: { msg },\n    //   //   } = err.response;\n    //   //   if (!isEmptyOrNull(msg)) {\n    //   //     console.log(msg);\n    //   //   }\n    //   // }\n    //   // console.log(err, err.response);\n    // });\n  }\n\n  if (method.toLowerCase() === \"put\") {\n    await api.put(url, data).catch(err => {\n      result = err.response;\n      console.log(err.message, err.response);\n    });\n  }\n\n  if (method.toLowerCase() === \"delete\") {\n    await api.delete(url, data).then(res => {\n      result = res;\n    }).catch(err => {\n      result = err.response;\n      console.log(err.message, err.response);\n      console.log(err, err.response);\n    });\n  }\n};","map":{"version":3,"sources":["/home/simo/react-google-keep/frontEnd/src/utils/core.utils.js"],"names":["axios","toastr","API_URL","isEmptyOrNull","value","undefined","request","url","method","data","headers","accept","result","api","create","baseURL","header","responseType","toLowerCase","get","catch","err","response","console","log","message","post","put","delete","then","res"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nimport toastr from 'toastr';\n\n\nconst API_URL = \"http://localhost:8080/keep/\";\n\nexport const isEmptyOrNull = (value) => {\n  if (\n    value === \"\" ||\n    value === null ||\n    value === undefined ||\n    value === \"undefined\"\n  ) {\n    return true;\n  }\n  return false;\n};\n\nexport const request = async (url, method, data) => {\n  let headers = {\n    accept: \"application/json\",\n    \"content-type\": \"multipart/form-data\",\n  };\n  let result = null;\n\n  const api = axios.create({\n    baseURL: API_URL,\n    header: headers,\n    responseType: \"json\",\n  });\n\n  if (result != null) {\n    return result;\n  }\n  // if (token) {\n  //   header = {\n  //     Authorization: `Bearer ${token}`,\n  //     \"Content-Type\": \"application/json; multipart/form-data\",\n  //   };\n  // }\n\n  if (method.toLowerCase() === \"get\") {\n    return await api.get(url).catch((err) => {\n      result = err.response;\n      console.log(err.message, err.response);\n      console.log(err, err.response);\n    });\n  }\n\n  if (method.toLowerCase() === \"post\") {\n    console.log(\"post\");\n    \n    return await api.post(url, data).catch((err)=>{\n      result = err.response;\n      console.log(err.message, err.response);\n      console.log(err, err.response);\n    });\n    // .catch((err) => {\n    //   result = err.response;\n    //   // console.log(err.message, err.response);\n    //   // if (err.message.includes(\"401\")) {\n    //   //   const {\n    //   //     data: { msg },\n    //   //   } = err.response;\n    //   //   if (!isEmptyOrNull(msg)) {\n    //   //     console.log(msg);\n    //   //   }\n    //   // }\n    //   // console.log(err, err.response);\n    // });\n  }\n\n  if (method.toLowerCase() === \"put\") {\n    await api.put(url, data).catch((err) => {\n      result = err.response;\n      console.log(err.message, err.response);\n    });\n  }\n\n  if (method.toLowerCase() === \"delete\") {\n    await api\n      .delete(url, data)\n      .then((res) => {\n        result = res;\n      })\n      .catch((err) => {\n        result = err.response;\n        console.log(err.message, err.response);\n\n        console.log(err, err.response);\n      });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}