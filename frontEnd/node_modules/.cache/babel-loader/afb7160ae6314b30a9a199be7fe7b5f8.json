{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = 'http://localhost:8080/keep/';\nexport const isEmptyOrNull = value => {\n  if (value === \"\" || value === null || value === undefined || value === \"undefined\") {\n    return true;\n  }\n\n  return false;\n};\nexport const request = async (url, method, data) => {\n  let headers = {\n    'accept': 'application/json',\n    'content-type': 'multipart/form-data'\n  };\n  let result = null;\n  const api = axios.create({\n    baseURL: API_URL,\n    header: headers,\n    responseType: \"json\"\n  });\n\n  if (result != null) {\n    return result;\n  } // if (token) {\n  //   header = {\n  //     Authorization: `Bearer ${token}`,\n  //     \"Content-Type\": \"application/json; multipart/form-data\",\n  //   };\n  // }\n\n\n  if (method.toLowerCase() === 'get') {\n    return await api.get(url).catch(err => {\n      result = err.response;\n      console.log(err.message, err.response);\n      console.log(err, err.response);\n    });\n  }\n\n  if (method.toLowerCase() === 'post') {\n    await api.post(url, data, {}).then(res => {\n      console.log(\"post\");\n    }).catch(err => {\n      result = err.response;\n      console.log(err.message, err.response);\n\n      if (err.message.includes(\"401\")) {\n        const {\n          data: {\n            msg\n          }\n        } = err.response;\n\n        if (!isEmptyOrNull(msg)) {\n          console.log(msg);\n        }\n      }\n\n      console.log(err, err.response);\n    });\n  }\n\n  if (method.toLowerCase() === 'put') {\n    await api.put(url, data).then(res => {\n      result = res;\n    }).catch(err => {\n      result = err.response;\n      console.log(err.message, err.response);\n      console.log(err, err.response);\n    });\n  }\n\n  if (method.toLowerCase() === 'delete') {\n    await api.delete(url, data).then(res => {\n      result = res;\n    }).catch(err => {\n      result = err.response;\n      console.log(err.message, err.response);\n      console.log(err, err.response);\n    });\n  }\n};","map":{"version":3,"sources":["/home/simo/react-google-keep/frontEnd/src/utils/core.utils.js"],"names":["axios","API_URL","isEmptyOrNull","value","undefined","request","url","method","data","headers","result","api","create","baseURL","header","responseType","toLowerCase","get","catch","err","response","console","log","message","post","then","res","includes","msg","put","delete"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = 'http://localhost:8080/keep/';\n\nexport const isEmptyOrNull = (value) => {\n  if (\n    value === \"\" ||\n    value === null ||\n    value === undefined ||\n    value === \"undefined\"\n  ) {\n    return true;\n  }\n  return false;\n};\n\nexport const request = async (url, method, data) => {\n let headers=  {\n  'accept': 'application/json',\n  'content-type': 'multipart/form-data'\n  \n}\n  let result = null;\n\n  const api = axios.create({\n    baseURL: API_URL,\n    header: headers,\n    responseType: \"json\",\n  });\n\n\n\n  if (result != null) {\n    return result;\n  }\n  // if (token) {\n  //   header = {\n  //     Authorization: `Bearer ${token}`,\n  //     \"Content-Type\": \"application/json; multipart/form-data\",\n  //   };\n  // }\n\n\n  if (method.toLowerCase() === 'get') {\nreturn(    await api\n  .get(url)\n  .catch((err) => {\n    result = err.response;\n    console.log(err.message, err.response);\n    console.log(err, err.response);\n  }));\n  }\n\n  if (method.toLowerCase() === 'post') {\n    await api\n      .post(url, data, {\n  \n})\n      .then((res) => {\n        console.log(\"post\")\n      })\n      .catch((err) => {\n        result = err.response;\n        console.log(err.message, err.response);\n        if (err.message.includes(\"401\")) {\n          const {\n            data: { msg },\n          } = err.response;\n          if (!isEmptyOrNull(msg)) {\n            console.log(msg);\n          }\n        }\n        console.log(err, err.response);\n      });\n  }\n\n  if (method.toLowerCase() === 'put') {\n    await api\n      .put(url, data)\n      .then((res) => {\n        result = res;\n      })\n      .catch((err) => {\n        result = err.response;\n        console.log(err.message, err.response);\n\n        console.log(err, err.response);\n      });\n  }\n\n  if (method.toLowerCase() === 'delete') {\n    await api\n      .delete(url, data)\n      .then((res) => {\n        result = res;\n      })\n      .catch((err) => {\n        result = err.response;\n        console.log(err.message, err.response);\n\n        console.log(err, err.response);\n      });\n  }\n\n  \n\n};\n"]},"metadata":{},"sourceType":"module"}