{"ast":null,"code":"import { getAllNotes, createNote } from '../api/keep.api';\nimport { USER_ID } from '../utils/local-Storage.utils';\n\nclass Note {\n  constructor() {\n    this.setResponse = data => {\n      this.respond = data;\n    };\n\n    this.getResponse = () => {\n      return this.respond;\n    };\n\n    this.addNote = async ({\n      note\n    }) => {\n      console.log(\"one hello createnote\");\n      await createNote(USER_ID, note).then(({\n        result\n      }) => {\n        console.log(\"hello createnote\");\n        const {\n          data\n        } = result;\n        const {\n          success,\n          message,\n          response\n        } = data;\n\n        if (success) {\n          this.setResponse(response);\n        } else {\n          this.setResponse([]);\n          console.log(message);\n        }\n      });\n    };\n\n    this.getNotes = async userId => {\n      await getAllNotes(userId).then(result => {\n        const {\n          data\n        } = result;\n        const {\n          success,\n          response,\n          message\n        } = data;\n\n        if (success) {\n          this.setResponse(response);\n        } else {\n          console.log(message);\n        }\n      });\n    };\n\n    this.respond = {\n      success: false,\n      response: null,\n      message: 'An error occured while connecting to the server!'\n    };\n  }\n\n}\n\nexport default new Note();","map":{"version":3,"sources":["/home/simo/react-google-keep/frontEnd/src/controller/Notes.js"],"names":["getAllNotes","createNote","USER_ID","Note","constructor","setResponse","data","respond","getResponse","addNote","note","console","log","then","result","success","message","response","getNotes","userId"],"mappings":"AACA,SAAQA,WAAR,EAAoBC,UAApB,QAAqC,iBAArC;AACA,SAAQC,OAAR,QAAsB,8BAAtB;;AACA,MAAMC,IAAN,CAAW;AAERC,EAAAA,WAAW,GAAG;AAAA,SAQhBC,WARgB,GAQFC,IAAI,IAAI;AACpB,WAAKC,OAAL,GAAeD,IAAf;AACF,KAVgB;;AAAA,SAYjBE,WAZiB,GAYH,MAAM;AACjB,aAAO,KAAKD,OAAZ;AACF,KAdgB;;AAAA,SAgBjBE,OAhBiB,GAgBP,OAAO;AAACC,MAAAA;AAAD,KAAP,KAAkB;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,YAAMX,UAAU,CAACC,OAAD,EAAUQ,IAAV,CAAV,CAA0BG,IAA1B,CAA+B,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAgB;AACjDH,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH,cAAM;AAAEN,UAAAA;AAAF,YAAWQ,MAAjB;AACG,cAAM;AAAEC,UAAAA,OAAF;AAAWC,UAAAA,OAAX;AAAoBC,UAAAA;AAApB,YAAiCX,IAAvC;;AACA,YAAIS,OAAJ,EAAa;AACT,eAAKV,WAAL,CAAiBY,QAAjB;AACH,SAFD,MAEO;AACH,eAAKZ,WAAL,CAAiB,EAAjB;AAEAM,UAAAA,OAAO,CAACC,GAAR,CAAYI,OAAZ;AACH;AACJ,OAXK,CAAN;AAYF,KA9BgB;;AAAA,SAgCjBE,QAhCiB,GAgCN,MAAOC,MAAP,IAAkB;AAE1B,YAAMnB,WAAW,CAACmB,MAAD,CAAX,CAAoBN,IAApB,CAA2BC,MAAF,IAAc;AACzC,cAAM;AAAER,UAAAA;AAAF,YAAWQ,MAAjB;AACA,cAAM;AAACC,UAAAA,OAAD;AAASE,UAAAA,QAAT;AAAkBD,UAAAA;AAAlB,YAA2BV,IAAjC;;AAEA,YAAIS,OAAJ,EAAa;AACT,eAAKV,WAAL,CAAiBY,QAAjB;AACH,SAFD,MAEO;AACHN,UAAAA,OAAO,CAACC,GAAR,CAAYI,OAAZ;AACH;AACJ,OATK,CAAN;AAUF,KA5CgB;;AACV,SAAKT,OAAL,GAAe;AACXQ,MAAAA,OAAO,EAAE,KADE;AAEXE,MAAAA,QAAQ,EAAE,IAFC;AAGXD,MAAAA,OAAO,EAAE;AAHE,KAAf;AAKH;;AARO;;AAgDX,eAAe,IAAIb,IAAJ,EAAf","sourcesContent":["\nimport {getAllNotes,createNote} from '../api/keep.api'\nimport {USER_ID} from '../utils/local-Storage.utils'\nclass Note {\n\n   constructor() {\n       this.respond = {\n           success: false,\n           response: null,\n           message: 'An error occured while connecting to the server!'\n       };\n   }\n\n setResponse = data => {\n   this.respond = data;\n};\n\ngetResponse = () => {\n   return this.respond;\n};\n\naddNote = async ({note}) => {\n    console.log(\"one hello createnote\")\n   await createNote(USER_ID, note).then(({ result }) => {\n       console.log(\"hello createnote\")\n    const { data } = result;\n       const { success, message, response } = data;\n       if (success) {\n           this.setResponse(response);\n       } else {\n           this.setResponse([]);\n\n           console.log(message);\n       }\n   });\n};\n\ngetNotes = async (userId) => {\n\n   await getAllNotes(userId).then(( result ) => {\n       const { data } = result;\n       const {success,response,message}=data;\n\n       if (success) {\n           this.setResponse(response);\n       } else {\n           console.log(message);\n       }\n   });\n};\n}\nexport default new Note();"]},"metadata":{},"sourceType":"module"}