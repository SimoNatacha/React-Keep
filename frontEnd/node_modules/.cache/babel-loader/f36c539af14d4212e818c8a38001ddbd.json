{"ast":null,"code":"import { getAllUsers } from '../api/user.api';\n\nclass User {\n  constructor() {\n    this.setResponse = data => {\n      this.respond = data;\n    };\n\n    this.getResponse = () => {\n      return this.respond;\n    };\n\n    this.getUsers = async () => {\n      await getAllUsers().then(result => {\n        const {\n          data\n        } = result;\n        console.log('response t', result);\n        console.log('response', data); // if (success) {\n        //     console.log(\"data gotten\")\n        //     console.log(\"data gotten\", data)\n        //     this.setResponse(response);\n        // } else {\n        //     console.log(message);\n        // }\n      });\n    };\n\n    this.respond = {\n      success: false,\n      response: null,\n      message: 'An error occured while connecting to the server!'\n    };\n  }\n\n}\n\nexport default new User();","map":{"version":3,"sources":["/home/simo/react-google-keep/src/controller/User.js"],"names":["getAllUsers","User","constructor","setResponse","data","respond","getResponse","getUsers","then","result","console","log","success","response","message"],"mappings":"AACA,SAAQA,WAAR,QAA0B,iBAA1B;;AAEC,MAAMC,IAAN,CAAW;AAERC,EAAAA,WAAW,GAAG;AAAA,SAQhBC,WARgB,GAQFC,IAAI,IAAI;AACpB,WAAKC,OAAL,GAAeD,IAAf;AACH,KAViB;;AAAA,SAYlBE,WAZkB,GAYJ,MAAM;AAChB,aAAO,KAAKD,OAAZ;AACH,KAdiB;;AAAA,SAgBlBE,QAhBkB,GAgBP,YAAY;AAEnB,YAAMP,WAAW,GAAGQ,IAAd,CAAqBC,MAAF,IAAc;AACnC,cAAM;AAAEL,UAAAA;AAAF,YAAWK,MAAjB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBF,MAAzB;AAEAC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBP,IAAxB,EAJmC,CAKnC;AACA;AACA;AACA;AACA;AACA;AACA;AACH,OAZK,CAAN;AAaH,KA/BiB;;AACV,SAAKC,OAAL,GAAe;AACXO,MAAAA,OAAO,EAAE,KADE;AAEXC,MAAAA,QAAQ,EAAE,IAFC;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAf;AAKH;;AARO;;AAmCZ,eAAe,IAAIb,IAAJ,EAAf","sourcesContent":["\nimport {getAllUsers} from '../api/user.api'\n\n class User {\n\n    constructor() {\n        this.respond = {\n            success: false,\n            response: null,\n            message: 'An error occured while connecting to the server!'\n        };\n    }\n\n  setResponse = data => {\n    this.respond = data;\n};\n\ngetResponse = () => {\n    return this.respond;\n};\n\ngetUsers = async () => {\n\n    await getAllUsers().then(( result ) => {\n        const { data } = result;\n        console.log('response t',result);\n        \n        console.log('response', data)\n        // if (success) {\n        //     console.log(\"data gotten\")\n        //     console.log(\"data gotten\", data)\n        //     this.setResponse(response);\n        // } else {\n        //     console.log(message);\n        // }\n    });\n};\n}\nexport default new User();"]},"metadata":{},"sourceType":"module"}