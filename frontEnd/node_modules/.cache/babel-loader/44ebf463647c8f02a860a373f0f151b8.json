{"ast":null,"code":"import { getAllUsers, createUser } from '../api/user.api';\n\nclass User {\n  constructor() {\n    this.setResponse = data => {\n      this.respond = data;\n    };\n\n    this.getResponse = () => {\n      return this.respond;\n    };\n\n    this.addUser = async user => {\n      await createUser(user).then(({\n        data\n      }) => {\n        const {\n          success,\n          message,\n          response\n        } = data;\n\n        if (success) {\n          this.setResponse(response);\n        } else {\n          this.setResponse([]);\n        }\n      });\n    };\n\n    this.getUsers = async () => {\n      await getAllUsers().then(result => {\n        const {\n          data\n        } = result;\n        const {\n          success,\n          response,\n          message\n        } = data;\n\n        if (success) {\n          this.setResponse(response);\n        } else {\n          console.log(message);\n        }\n      });\n    };\n\n    this.respond = {\n      success: false,\n      response: null,\n      message: 'An error occured while connecting to the server!'\n    };\n  }\n\n}\n\nexport default new User();","map":{"version":3,"sources":["/home/simo/react-google-keep/frontEnd/src/controller/User.js"],"names":["getAllUsers","createUser","User","constructor","setResponse","data","respond","getResponse","addUser","user","then","success","message","response","getUsers","result","console","log"],"mappings":"AACA,SAAQA,WAAR,EAAoBC,UAApB,QAAqC,iBAArC;;AAEC,MAAMC,IAAN,CAAW;AAERC,EAAAA,WAAW,GAAG;AAAA,SAQhBC,WARgB,GAQFC,IAAI,IAAI;AACpB,WAAKC,OAAL,GAAeD,IAAf;AACH,KAViB;;AAAA,SAYlBE,WAZkB,GAYJ,MAAM;AAChB,aAAO,KAAKD,OAAZ;AACH,KAdiB;;AAAA,SAgBlBE,OAhBkB,GAgBR,MAAMC,IAAN,IAAc;AACpB,YAAMR,UAAU,CAACQ,IAAD,CAAV,CAAiBC,IAAjB,CAAsB,CAAC;AAAEL,QAAAA;AAAF,OAAD,KAAc;AACtC,cAAM;AAAEM,UAAAA,OAAF;AAAWC,UAAAA,OAAX;AAAoBC,UAAAA;AAApB,YAAiCR,IAAvC;;AACA,YAAIM,OAAJ,EAAa;AACT,eAAKP,WAAL,CAAiBS,QAAjB;AACH,SAFD,MAEO;AACH,eAAKT,WAAL,CAAiB,EAAjB;AACH;AACJ,OAPK,CAAN;AAQH,KAzBiB;;AAAA,SA2BlBU,QA3BkB,GA2BP,YAAY;AAEnB,YAAMd,WAAW,GAAGU,IAAd,CAAqBK,MAAF,IAAc;AACnC,cAAM;AAAEV,UAAAA;AAAF,YAAWU,MAAjB;AACA,cAAM;AAACJ,UAAAA,OAAD;AAASE,UAAAA,QAAT;AAAkBD,UAAAA;AAAlB,YAA2BP,IAAjC;;AAEA,YAAIM,OAAJ,EAAa;AACT,eAAKP,WAAL,CAAiBS,QAAjB;AACH,SAFD,MAEO;AACHG,UAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACH;AACJ,OATK,CAAN;AAUH,KAvCiB;;AACV,SAAKN,OAAL,GAAe;AACXK,MAAAA,OAAO,EAAE,KADE;AAEXE,MAAAA,QAAQ,EAAE,IAFC;AAGXD,MAAAA,OAAO,EAAE;AAHE,KAAf;AAKH;;AARO;;AA2CZ,eAAe,IAAIV,IAAJ,EAAf","sourcesContent":["\nimport {getAllUsers,createUser} from '../api/user.api'\n\n class User {\n\n    constructor() {\n        this.respond = {\n            success: false,\n            response: null,\n            message: 'An error occured while connecting to the server!'\n        };\n    }\n\n  setResponse = data => {\n    this.respond = data;\n};\n\ngetResponse = () => {\n    return this.respond;\n};\n\naddUser = async user => {\n    await createUser(user).then(({ data }) => {\n        const { success, message, response } = data;\n        if (success) {\n            this.setResponse(response);\n        } else {\n            this.setResponse([]);\n        }\n    });\n};\n\ngetUsers = async () => {\n\n    await getAllUsers().then(( result ) => {\n        const { data } = result;\n        const {success,response,message}=data;\n\n        if (success) {\n            this.setResponse(response);\n        } else {\n            console.log(message);\n        }\n    });\n};\n}\nexport default new User();"]},"metadata":{},"sourceType":"module"}