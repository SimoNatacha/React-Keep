{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \" http://localhost:8080/myapp/\";\nexport const isEmptyOrNull = value => {\n  if (value === \"\" || value === null || value === undefined || value === \"undefined\") {\n    return true;\n  }\n\n  return false;\n};\nexport const request = async (url, method, data) => {\n  let header = {};\n  let result = null;\n  const api = axios.create({\n    baseURL: API_URL,\n    headers: header,\n    responseType: \"json\"\n  });\n\n  if (result != null) {\n    return result;\n  } //   if (token) {\n  //     header = {\n  //       Authorization: `Bearer ${token}`,\n  //       \"Content-Type\": \"application/json; multipart/form-data\",\n  //     };\n  //   }\n  //   if (method.toLowerCase() === \"get\") {\n  //     await api\n  //       .get(url)\n  //       .then((res) => {\n  //         result = res;\n  //       })\n  //       .catch((err) => {\n  //         result = err.response;\n  //         console.log(err.message, err.response);\n  //         console.log(err, err.response);\n  //       });\n  //   }\n  //   if (method.toLowerCase() === \"post\") {\n  //     await api\n  //       .post(url, data, {\n  //         onUploadProgress: (progressEvent) => {\n  //           console.log(\n  //             `upload progress:${Math.round(\n  //               (progressEvent.loaded / progressEvent.total) * 100\n  //             )}%`\n  //           );\n  //         },\n  //       })\n  //       .then((res) => {\n  //         result = res;\n  //       })\n  //       .catch((err) => {\n  //         result = err.response;\n  //         console.log(err.message, err.response);\n  //         if (err.message.includes(\"401\")) {\n  //           const {\n  //             data: { msg },\n  //           } = err.response;\n  //           if (!isEmptyOrNull(msg)) {\n  //             console.log(msg);\n  //           }\n  //         }\n  //         console.log(err, err.response);\n  //       });\n  //   }\n  //   if (method.toLowerCase() === \"put\") {\n  //     await api\n  //       .put(url, data)\n  //       .then((res) => {\n  //         result = res;\n  //       })\n  //       .catch((err) => {\n  //         result = err.response;\n  //         console.log(err.message, err.response);\n  //         console.log(err, err.response);\n  //       });\n  //   }\n  //   if (method.toLowerCase() === \"delete\") {\n  //     await api\n  //       .delete(url, data)\n  //       .then((res) => {\n  //         result = res;\n  //       })\n  //       .catch((err) => {\n  //         result = err.response;\n  //         console.log(err.message, err.response);\n  //         console.log(err, err.response);\n  //       });\n  //   }\n\n};","map":{"version":3,"sources":["/home/simo/react-google-keep/src/utils/core.utils.js"],"names":["axios","API_URL","isEmptyOrNull","value","undefined","request","url","method","data","header","result","api","create","baseURL","headers","responseType"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,+BAAhB;AAEA,OAAO,MAAMC,aAAa,GAAIC,KAAD,IAAW;AACtC,MACEA,KAAK,KAAK,EAAV,IACAA,KAAK,KAAK,IADV,IAEAA,KAAK,KAAKC,SAFV,IAGAD,KAAK,KAAK,WAJZ,EAKE;AACA,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD,CAVM;AAYP,OAAO,MAAME,OAAO,GAAG,OAAOC,GAAP,EAAYC,MAAZ,EAAoBC,IAApB,KAA6B;AAClD,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,MAAM,GAAG,IAAb;AAEA,QAAMC,GAAG,GAAGX,KAAK,CAACY,MAAN,CAAa;AACvBC,IAAAA,OAAO,EAAEZ,OADc;AAEvBa,IAAAA,OAAO,EAAEL,MAFc;AAGvBM,IAAAA,YAAY,EAAE;AAHS,GAAb,CAAZ;;AAQA,MAAIL,MAAM,IAAI,IAAd,EAAoB;AAClB,WAAOA,MAAP;AACD,GAdiD,CAepD;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAIC,CA/FM","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \" http://localhost:8080/myapp/\";\n\nexport const isEmptyOrNull = (value) => {\n  if (\n    value === \"\" ||\n    value === null ||\n    value === undefined ||\n    value === \"undefined\"\n  ) {\n    return true;\n  }\n  return false;\n};\n\nexport const request = async (url, method, data) => {\n  let header = {};\n  let result = null;\n\n  const api = axios.create({\n    baseURL: API_URL,\n    headers: header,\n    responseType: \"json\",\n  });\n\n\n\n  if (result != null) {\n    return result;\n  }\n//   if (token) {\n//     header = {\n//       Authorization: `Bearer ${token}`,\n//       \"Content-Type\": \"application/json; multipart/form-data\",\n//     };\n//   }\n\n\n//   if (method.toLowerCase() === \"get\") {\n//     await api\n//       .get(url)\n//       .then((res) => {\n//         result = res;\n//       })\n//       .catch((err) => {\n//         result = err.response;\n//         console.log(err.message, err.response);\n//         console.log(err, err.response);\n//       });\n//   }\n\n//   if (method.toLowerCase() === \"post\") {\n//     await api\n//       .post(url, data, {\n//         onUploadProgress: (progressEvent) => {\n//           console.log(\n//             `upload progress:${Math.round(\n//               (progressEvent.loaded / progressEvent.total) * 100\n//             )}%`\n//           );\n//         },\n//       })\n//       .then((res) => {\n//         result = res;\n//       })\n//       .catch((err) => {\n//         result = err.response;\n//         console.log(err.message, err.response);\n//         if (err.message.includes(\"401\")) {\n//           const {\n//             data: { msg },\n//           } = err.response;\n//           if (!isEmptyOrNull(msg)) {\n//             console.log(msg);\n//           }\n//         }\n//         console.log(err, err.response);\n//       });\n//   }\n\n//   if (method.toLowerCase() === \"put\") {\n//     await api\n//       .put(url, data)\n//       .then((res) => {\n//         result = res;\n//       })\n//       .catch((err) => {\n//         result = err.response;\n//         console.log(err.message, err.response);\n\n//         console.log(err, err.response);\n//       });\n//   }\n\n//   if (method.toLowerCase() === \"delete\") {\n//     await api\n//       .delete(url, data)\n//       .then((res) => {\n//         result = res;\n//       })\n//       .catch((err) => {\n//         result = err.response;\n//         console.log(err.message, err.response);\n\n//         console.log(err, err.response);\n//       });\n//   }\n\n  \n\n};\n"]},"metadata":{},"sourceType":"module"}