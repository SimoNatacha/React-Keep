{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \" http://localhost:8080/myapp\";\nexport const isEmptyOrNull = value => {\n  if (value === \"\" || value === null || value === undefined || value === \"undefined\") {\n    return true;\n  }\n\n  return false;\n};\nexport const request = async (url, method, data) => {\n  let header = {};\n  let result = null;\n  const api = axios.create({\n    baseURL: API_URL,\n    headers: header,\n    responseType: \"json\"\n  });\n\n  switch (method.toLowerCase()) {\n    case 'get':\n      await api.get(url).then(res => {\n        result = res;\n      }).catch(err => {\n        result = err.response;\n        console.log(err.message, err.response);\n        console.log(err, err.response);\n      });\n      break;\n\n    case 'put':\n      await api.put(url, data).then(res => {\n        result = res;\n      }).catch(err => {\n        result = err.response;\n        console.log(err.message, err.response);\n        console.log(err, err.response);\n      });\n      break;\n\n    case 'post':\n      await api.post(url, data, {\n        onUploadProgress: progressEvent => {\n          console.log(`upload progress:${Math.round(progressEvent.loaded / progressEvent.total * 100)}%`);\n        }\n      }).then(res => {\n        result = res;\n      }).catch(err => {\n        result = err.response;\n        console.log(err.message, err.response);\n\n        if (err.message.includes(\"401\")) {\n          const {\n            data: {\n              msg\n            }\n          } = err.response;\n\n          if (!isEmptyOrNull(msg)) {\n            console.log(msg);\n          }\n        }\n\n        console.log(err, err.response);\n      });\n      break;\n\n    case 'delete':\n      await api.delete(url, data).then(res => {\n        result = res;\n      }).catch(err => {\n        result = err.response;\n        console.log(err.message, err.response);\n        console.log(err, err.response);\n      });\n      break;\n\n    default:\n      return `method ${method} is not implemented`;\n  }\n\n  if (result != null) {\n    return result;\n  } //   if (token) {\n  //     header = {\n  //       Authorization: `Bearer ${token}`,\n  //       \"Content-Type\": \"application/json; multipart/form-data\",\n  //     };\n  //   }\n  //   if (method.toLowerCase() === \"get\") {\n  //     await api\n  //       .get(url)\n  //       .then((res) => {\n  //         result = res;\n  //       })\n  //       .catch((err) => {\n  //         result = err.response;\n  //         console.log(err.message, err.response);\n  //         console.log(err, err.response);\n  //       });\n  //   }\n  //   if (method.toLowerCase() === \"post\") {\n  //     await api\n  //       .post(url, data, {\n  //         onUploadProgress: (progressEvent) => {\n  //           console.log(\n  //             `upload progress:${Math.round(\n  //               (progressEvent.loaded / progressEvent.total) * 100\n  //             )}%`\n  //           );\n  //         },\n  //       })\n  //       .then((res) => {\n  //         result = res;\n  //       })\n  //       .catch((err) => {\n  //         result = err.response;\n  //         console.log(err.message, err.response);\n  //         if (err.message.includes(\"401\")) {\n  //           const {\n  //             data: { msg },\n  //           } = err.response;\n  //           if (!isEmptyOrNull(msg)) {\n  //             console.log(msg);\n  //           }\n  //         }\n  //         console.log(err, err.response);\n  //       });\n  //   }\n  //   if (method.toLowerCase() === \"put\") {\n  //     await api\n  //       .put(url, data)\n  //       .then((res) => {\n  //         result = res;\n  //       })\n  //       .catch((err) => {\n  //         result = err.response;\n  //         console.log(err.message, err.response);\n  //         console.log(err, err.response);\n  //       });\n  //   }\n  //   if (method.toLowerCase() === \"delete\") {\n  //     await api\n  //       .delete(url, data)\n  //       .then((res) => {\n  //         result = res;\n  //       })\n  //       .catch((err) => {\n  //         result = err.response;\n  //         console.log(err.message, err.response);\n  //         console.log(err, err.response);\n  //       });\n  //   }\n\n};","map":{"version":3,"sources":["/home/simo/react-google-keep/src/utils/core.utils.js"],"names":["axios","API_URL","isEmptyOrNull","value","undefined","request","url","method","data","header","result","api","create","baseURL","headers","responseType","toLowerCase","get","then","res","catch","err","response","console","log","message","put","post","onUploadProgress","progressEvent","Math","round","loaded","total","includes","msg","delete"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \" http://localhost:8080/myapp\";\n\nexport const isEmptyOrNull = (value) => {\n  if (\n    value === \"\" ||\n    value === null ||\n    value === undefined ||\n    value === \"undefined\"\n  ) {\n    return true;\n  }\n  return false;\n};\n\nexport const request = async (url, method, data) => {\n  let header = {};\n  let result = null;\n\n  const api = axios.create({\n    baseURL: API_URL,\n    headers: header,\n    responseType: \"json\",\n  });\n\n\n  switch (method.toLowerCase()) {\n    case 'get':\n      await api\n        .get(url)\n        .then((res) => {\n          result = res;\n        })\n        .catch((err) => {\n          result = err.response;\n          console.log(err.message, err.response);\n          console.log(err, err.response);\n        });\n        break;\n    case 'put':\n      await api\n        .put(url, data)\n        .then((res) => {\n          result = res;\n        })\n        .catch((err) => {\n          result = err.response;\n          console.log(err.message, err.response);\n\n          console.log(err, err.response);\n        });\n        break;\n    case 'post':\n      await api\n        .post(url, data, {\n          onUploadProgress: (progressEvent) => {\n            console.log(\n              `upload progress:${Math.round(\n                (progressEvent.loaded / progressEvent.total) * 100\n              )}%`\n            );\n          },\n        })\n        .then((res) => {\n          result = res;\n        })\n        .catch((err) => {\n          result = err.response;\n          console.log(err.message, err.response);\n          if (err.message.includes(\"401\")) {\n            const {\n              data: { msg },\n            } = err.response;\n            if (!isEmptyOrNull(msg)) {\n              console.log(msg);\n            }\n          }\n          console.log(err, err.response);\n        });\n        break;\n    case 'delete':\n      await api\n        .delete(url, data)\n        .then((res) => {\n          result = res;\n        })\n        .catch((err) => {\n          result = err.response;\n          console.log(err.message, err.response);\n\n          console.log(err, err.response);\n        });\n        break;\n    default:\n      return `method ${method} is not implemented`;\n  }\n\n  if (result != null) {\n    return result;\n  }\n//   if (token) {\n//     header = {\n//       Authorization: `Bearer ${token}`,\n//       \"Content-Type\": \"application/json; multipart/form-data\",\n//     };\n//   }\n\n\n//   if (method.toLowerCase() === \"get\") {\n//     await api\n//       .get(url)\n//       .then((res) => {\n//         result = res;\n//       })\n//       .catch((err) => {\n//         result = err.response;\n//         console.log(err.message, err.response);\n//         console.log(err, err.response);\n//       });\n//   }\n\n//   if (method.toLowerCase() === \"post\") {\n//     await api\n//       .post(url, data, {\n//         onUploadProgress: (progressEvent) => {\n//           console.log(\n//             `upload progress:${Math.round(\n//               (progressEvent.loaded / progressEvent.total) * 100\n//             )}%`\n//           );\n//         },\n//       })\n//       .then((res) => {\n//         result = res;\n//       })\n//       .catch((err) => {\n//         result = err.response;\n//         console.log(err.message, err.response);\n//         if (err.message.includes(\"401\")) {\n//           const {\n//             data: { msg },\n//           } = err.response;\n//           if (!isEmptyOrNull(msg)) {\n//             console.log(msg);\n//           }\n//         }\n//         console.log(err, err.response);\n//       });\n//   }\n\n//   if (method.toLowerCase() === \"put\") {\n//     await api\n//       .put(url, data)\n//       .then((res) => {\n//         result = res;\n//       })\n//       .catch((err) => {\n//         result = err.response;\n//         console.log(err.message, err.response);\n\n//         console.log(err, err.response);\n//       });\n//   }\n\n//   if (method.toLowerCase() === \"delete\") {\n//     await api\n//       .delete(url, data)\n//       .then((res) => {\n//         result = res;\n//       })\n//       .catch((err) => {\n//         result = err.response;\n//         console.log(err.message, err.response);\n\n//         console.log(err, err.response);\n//       });\n//   }\n\n  \n\n};\n"]},"metadata":{},"sourceType":"module"}